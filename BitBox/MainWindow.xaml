<Window x:Class="BitBox.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Closing="Window_Closing"
        WindowStartupLocation="CenterScreen"
        xmlns:cnv="clr-namespace:BitBox.Converters"
        Title="Drag N' Pop" Height="450" Width="750"  Icon="Resources/Martin-Berube-Character-Dragon.ico">
    <Window.Resources>

        <cnv:FilePathToFileNameConverter
            x:Key="FilePathToFileNameConverter"/>
        <cnv:BoolToImageConverter
            x:Key="BoolToImageConverter"/>
        <BooleanToVisibilityConverter
            x:Key="BooleanToVisibilityConverter"/>
        <cnv:VisibilityToOppositeVisibilityConverter
            x:Key="VisibilityToOppositeVisibilityConverter"/>
        <cnv:BoolToOppositeVsibilityConverter
            x:Key="BoolToOppositeVsibilityConverter"/>
        <cnv:BooleanToOppositeBooleanConverter
            x:Key="BooleanToOppositeBooleanConverter"/>
        <cnv:NegativeConverter
            x:Key="NegativeConverter"/>

        <SolidColorBrush Color="#FF0A132C" x:Key="MainPanelBackgroundColor"/>
        <SolidColorBrush Color="#FF131212" x:Key="PanelBackgroundDarkerColor"/>
        <SolidColorBrush Color="#FF343434" x:Key="PanelBackgroundColor"/>
        <SolidColorBrush Color="#FF878787" x:Key="PanelBackgroundLighterColor"/>
        <SolidColorBrush Color="#FF616161" x:Key="TextForegroundColor"/>
        <SolidColorBrush Color="#FF2F7BFF" x:Key="ChatButtonBorderColor"/>

        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Background" Value="Transparent"/>
        </Style>

        <ControlTemplate x:Key="ToggleButtonLeft" TargetType="{x:Type ToggleButton}">
            <Border Name="Border"
                    BorderBrush="Black"
                    CornerRadius="5,0,0,5"
                    BorderThickness="1">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF1F1E1E" Offset="1"/>
                        <GradientStop Color="#FF3E3D3D" Offset="0"/>
                    </LinearGradientBrush>
                </Border.Background>

                <ContentPresenter HorizontalAlignment="Center"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                TextBlock.FontWeight="Bold"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#808080"/>
                </Trigger> 
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#FF151414"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ToggleRightLeft" TargetType="{x:Type ToggleButton}">
            <Border Name="Border"
                    BorderBrush="Black"
                    CornerRadius="0,5,5,0"
                    BorderThickness="1">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF1F1E1E" Offset="1"/>
                        <GradientStop Color="#FF3E3D3D" Offset="0"/>
                    </LinearGradientBrush>
                </Border.Background>

                <ContentPresenter HorizontalAlignment="Center"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                TextBlock.FontWeight="Bold"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#808080"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#FF151414"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="FontFamily" Value="Calibri"/>
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{StaticResource PanelBackgroundColor}"/>
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="ToolTip" Value="Click to sort."/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}">

            <Setter Property="Background" Value="{StaticResource PanelBackgroundColor}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Height" Value="22"/>
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Width" Value="35"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFC5C5C5" />
                                <Setter Property="Foreground" Value="White" />

                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#FF212121" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ToggleButton}"
               x:Key="ChatButtonStyle">

            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Height" Value="22"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">

                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="3"
                                BorderThickness="2"
                                BorderBrush="#FF2F7BFF">
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFC5C5C5" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Row="1"
              Grid.ColumnSpan="2"
              Background="{StaticResource MainPanelBackgroundColor}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="2"
                        Panel.ZIndex="5"
                        Name="StackPanelSongName"
                        Visibility="{Binding IsAlive, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Margin="5"
                        VerticalAlignment="Center">
                <TextBlock Text="{Binding CurrentSong.Name, Converter={StaticResource FilePathToFileNameConverter}}"
                           FontSize="20"
                           Name="SongNameTextBlock"
                           Foreground="#F5F51F">
                    <TextBlock.Resources>
                        <!--<Storyboard x:Key="slide">
                            <DoubleAnimation From="0" To="200" Duration="00:00:10"
                                             Storyboard.TargetProperty="X"
                                             Storyboard.TargetName="transferCurreny"
                                             RepeatBehavior="Forever"/>
                        </Storyboard>-->
                    </TextBlock.Resources>
                    <TextBlock.RenderTransform>
                        <TranslateTransform x:Name="transferCurreny" X="0"/>
                    </TextBlock.RenderTransform>
                    <!--<TextBlock.Triggers>
                        <EventTrigger RoutedEvent="TextBlock.Loaded">
                            <BeginStoryboard Storyboard="{StaticResource slide}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="TextBlock.SizeChanged">
                            <BeginStoryboard Storyboard="{StaticResource slide}" />
                        </EventTrigger>
                    </TextBlock.Triggers>-->
                </TextBlock>
                <TextBlock Text="{Binding CurrentSong.ArtistName}"
                           FontSize="14"
                           Foreground="#FEFB79"/>
            </StackPanel>


            <Rectangle Fill="White"
                       Visibility="{Binding IsAlive, Converter={StaticResource BooleanToVisibilityConverter}}"
                       Height="50"
                       Width="1"
                       Grid.Column="1"
                       VerticalAlignment="Center"/>

            <Rectangle Fill="White"
                       Visibility="{Binding IsAlive, Converter={StaticResource BooleanToVisibilityConverter}}"
                       Height="50"
                       Width="1"
                       Grid.Column="3"
                       VerticalAlignment="Center"/>


            <Rectangle Fill="White"
                       Panel.ZIndex="2"
                       Height="50"
                       Width="1"
                       Grid.Column="5"
                       VerticalAlignment="Center"/>

            <Rectangle Fill="White"
                       Height="50"
                       Width="1"
                       Grid.Column="7"
                       VerticalAlignment="Center"/>

            <Image Source="{Binding IsTransmitter, Converter={StaticResource BoolToImageConverter}, ConverterParameter=Status}"
                   Margin="5"
                   Visibility="{Binding IsAlive, Converter={StaticResource BooleanToVisibilityConverter}}"
                   VerticalAlignment="Center"
                   Width="64"
                   Height="64"/>

            <StackPanel Grid.Column="4"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                <TextBlock Text="DURATION"
                           HorizontalAlignment="Center"
                           FontSize="10"
                           Foreground="#FFDADADA"/>
                <TextBlock Text="{Binding CurrentSong.CurrentPosition}"
                           Foreground="White"
                           FontSize="20">

                </TextBlock>
            </StackPanel>

            <StackPanel Grid.Column="6"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                <TextBlock Text="CLOCK"
                           HorizontalAlignment="Center"
                           FontSize="10"
                           Foreground="#FFDADADA"/>
                <TextBlock Text="{Binding TimeNow}"
                           FontSize="20"
                           Foreground="#FEFB79"/>
            </StackPanel>

            <Image Grid.Column="8" Source="Resources/AppLogo.png"
                   Width="64"/>

        </Grid>

        <Grid Grid.Row="2"
              Grid.ColumnSpan="2">
            <Grid.Resources>
                <Style TargetType="{x:Type Image}">
                    <Setter Property="Margin" Value="5"/>
                </Style>
            </Grid.Resources>

            <Border BorderThickness="1">
                <Grid>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition  Width="auto"/>
                        <ColumnDefinition  Width="auto"/>
                        <ColumnDefinition  Width="auto"/>
                        <ColumnDefinition  Width="auto"/>
                        <ColumnDefinition  Width="auto"/>
                        <ColumnDefinition  Width="auto"/>
                        <ColumnDefinition  Width="auto"/>
                        <ColumnDefinition  Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Image Source="Resources/micro.png"
                           Width="32"/>

                    <Image Source="Resources/Forward.ico"
                           Name="imgBackward"
                           MouseDown="imgBackward_MouseDown"
                           Grid.Column="1"
                           Margin="32,0,-30,0"
                           Width="32">
                        <Image.RenderTransform>
                            <ScaleTransform ScaleX="-1"/>
                        </Image.RenderTransform>
                    </Image>

                    <Image Visibility="{Binding IsPlaying, Converter={StaticResource BoolToOppositeVsibilityConverter}}"
                           Name="imgPlay"
                           Margin="5,0,0,0"
                           MouseDown="imgPlay_MouseDown"
                           Grid.Column="2"
                           Width="32">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Resources/Play.ico"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" Value="Resources/PlayOver.ico"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>

                    <Image Visibility="{Binding IsPlaying, Converter={StaticResource BooleanToVisibilityConverter}}"
                           Name="imgPause"
                           MouseDown="imgPause_MouseDown"
                           Grid.Column="3"
                           Margin="5,0,0,0"
                           Width="32">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Resources/Pause.ico"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" Value="Resources/PauseOver.ico"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>

                    <Image Visibility="{Binding IsAlive, Converter={StaticResource BooleanToVisibilityConverter}}"
                           Name="imgStop"
                           MouseDown="imgStop_MouseDown"
                           Grid.Column="4"
                           Margin="5,0,0,0"
                           Width="32">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Resources/Stop.ico"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" Value="Resources/StopOver.ico"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>

                    <Image Name="imgForward"
                           MouseDown="imgForward_MouseDown"
                           Grid.Column="5"
                           Margin="5,0,0,0"
                           Width="32">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Resources/Forward.ico"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" Value="Resources/ForwardOver.ico"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>

                    <Image Name="imgMute"
                           Visibility="{Binding ElementName=imgUnmute, Path=Visibility, Converter={StaticResource VisibilityToOppositeVisibilityConverter}}"
                           MouseDown="imgMute_MouseDown"
                           Grid.Column="6"
                           Width="32">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Resources/Sound.ico"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" Value="Resources/SoundOver.ico"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>

                    <Image Visibility="{Binding IsMute,Converter={StaticResource BooleanToVisibilityConverter}}"
                           Name="imgUnmute"
                           MouseDown="imgMute_MouseDown"
                           Grid.Column="6"
                           Width="32">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Source" Value="Resources/Mute.ico"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" Value="Resources/MuteOver.ico"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>

                    <StackPanel Orientation="Vertical"
                                HorizontalAlignment="Center"
                                Margin="20,0,0,0"
                                Visibility="{Binding ShowPause}"
                                Grid.Column="7">

                        <TextBlock Text="COMING UP NEXT"
                                   TextAlignment="Center"
                                   HorizontalAlignment="Center"
                                   FontWeight="Bold"
                                   Foreground="{StaticResource PanelBackgroundColor}"
                                   Background="Transparent"/>

                        <TextBlock Text="{Binding NextSong}"
                                   Foreground="{StaticResource PanelBackgroundLighterColor}"
                                   TextAlignment="Center"
                                   HorizontalAlignment="Center"
                                   FontWeight="Bold"
                                   Background="Transparent"/>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>

        <Grid Grid.Row="3">
            <Grid Margin="0,5,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBox Background="Transparent"
                         BorderBrush="Gray"
                         Height="22"
                         Grid.Column="0"
                         Name="txtUrl"
                         GotFocus="TextBox_GotFocus"
                         LostFocus="txtUrl_LostFocus"
                         Text="Add track from URL"
                         Foreground="Gray"
                         FontFamily="calibri"
                         Margin="10,0,0,0"/>

                <Button Content="Add"
                        Height="22"
                        FontSize="12"
                        Width="70"
                        Grid.Column="1"
                        Name="btnAdd">

                </Button>
                <Button Name="btnAddTrack"
                        Margin="5,0,0,0"
                        HorizontalAlignment="Left"
                        Click="btnAddTrack_Click"
                        Grid.Column="2">
                    <Button.Content>
                        <Image Source="Resources/Add.ico"
                                   Margin="5"/>
                    </Button.Content>
                </Button>

                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            Grid.Column="4">
                    <Button Name="btnDown"
                            Click="btnDown_Click"
                            Margin="0,0,10,0"
                            Grid.Column="3">
                        <Button.Content>
                            <Image Source="Resources/Down.ico"
                                   Margin="5"/>
                        </Button.Content>

                    </Button>
                    <Button Name="btnUp"
                            FontFamily="calibri"
                            Click="btnUp_Click"
                            Grid.Column="4">
                        <Button.Content>
                            <Image Source="Resources/Up.ico"
                                   Margin="5"/>
                        </Button.Content>
                    </Button>
                </StackPanel>

            </Grid>
        </Grid>

        <Grid Grid.Row="4"
              Margin="0,10,0,0">

            <DataGrid ItemsSource="{Binding PlayList}" 
                      Name="dgPlaylist"
                      SelectionMode="Single"
                      CanUserAddRows="False"
                      BorderBrush="{StaticResource PanelBackgroundColor}"
                      BorderThickness="0,1,1,0"
                      AllowDrop="True"
                      DragEnter="ListBox_DragEnter"
                      Foreground="{StaticResource TextForegroundColor}"
                      DragLeave="ListBox_DragLeave"
                      Drop="ListBox_Drop"
                      AutoGenerateColumns="False"
                      SelectedItem="{Binding SelectedSong, Mode=TwoWay}"
                      Background="Transparent"
                      GridLinesVisibility="None"
                      AlternationCount="2">
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="Height" Value="20"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    </Style>
                </DataGrid.CellStyle>

                <DataGrid.Resources>

                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightBlue"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />

                    <Style TargetType="{x:Type DataGridRow}">

                        <Style.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">

                                <Setter Property="Background" Value="#F6F7D1"></Setter>
                            </Trigger>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">

                                <Setter Property="Background" Value="Transparent"></Setter>
                            </Trigger>

                            <!--<DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                <Setter Property="Background" Value="LightBlue"/>
                            </DataTrigger>-->
                        </Style.Triggers>
                    </Style>

                </DataGrid.Resources>

                <DataGrid.Columns>
                    <DataGridTextColumn Header="#" 
                                        IsReadOnly="True"
                                        Binding="{Binding Counter}" 
                                        Width="auto"/>
                    <DataGridTextColumn Header="Title" 
                                        IsReadOnly="True"
                                        Binding="{Binding Name}" 
                                        Width="3*"/>
                    <DataGridTextColumn Header="Artist"
                                        IsReadOnly="True"
                                        Binding="{Binding ArtistName}"
                                        Width="3*"/>
                    <DataGridTextColumn Header="Duration"
                                        IsReadOnly="True"
                                        Binding="{Binding TotalDuration}"
                                        Width="3*"/>
                    <DataGridTemplateColumn IsReadOnly="True"
                                            Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Visibility="{Binding IsPlaying, Converter={StaticResource BooleanToVisibilityConverter}}"
                                       Height="16"
                                       Source="Resources/Playing.ico"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                </DataGrid.Columns>
            </DataGrid>

            <StackPanel HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Visibility="{Binding IsDragging, Converter={StaticResource BooleanToVisibilityConverter}}">

                <Image Source="Resources/Drop.ico"
                       Width="48"
                       Height="48"/>

                <TextBlock Text="Drop tracks here"
                           Foreground="#C4C4C4"
                           FontFamily="calibri"
                           FontSize="32"/>

            </StackPanel>

            <Grid VerticalAlignment="Bottom"
                  Visibility="{Binding ElementName=gbChat, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                  IsVisibleChanged="Grid_IsVisibleChanged"
                  HorizontalAlignment="Right"
                  Height="150"
                  Width="300"
                  Background="{StaticResource PanelBackgroundDarkerColor}">
                <Border BorderThickness="2"
                        BorderBrush="White">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <ListBox BorderThickness="0"
                                 ItemsSource="{Binding Chats}"
                                 Background="Transparent">

                            <ListBox.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                            </ListBox.Resources>

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Sender}"
                                                   Foreground="#F5F51F"/>
                                        <TextBlock Text=": "
                                                   Foreground="White"/>
                                        <TextBlock Text="{Binding Text}"
                                                   Foreground="White"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <TextBox Grid.Row="1"
                                 Focusable="True"
                                 FocusManager.IsFocusScope="True"
                                 Name="txtChat"
                                 Background="{StaticResource PanelBackgroundColor}"
                                 KeyDown="TextBox_KeyDown"
                                 Foreground="White"/>
                    </Grid>
                </Border>
            </Grid>

        </Grid>

        <Grid Grid.Row="3"
              Grid.Column="1">
            <TextBlock Text="Online Listeners"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       FontWeight="Bold"
                       FontSize="12"
                       Foreground="#FF3254B2"/>
        </Grid>

        <Grid Grid.Row="4"
              Grid.Column="1">

            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <ListBox Grid.Column="1"
                     BorderBrush="{StaticResource PanelBackgroundColor}"
                     ItemsSource="{Binding Clients}"
                     Background="Transparent"
                     BorderThickness="0">

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{Binding IsListener, Converter={StaticResource BoolToImageConverter}, ConverterParameter=Client}" 
                                   Height="24"
                                   Width="24"/>
                            <TextBlock Text="{Binding MachineName}"
                                       Margin="5,0,0,0"
                                       VerticalAlignment="Center"
                                       Foreground="{StaticResource TextForegroundColor}"/>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>

            </ListBox>

            <ToggleButton Grid.Row="1"
                          IsEnabled="{Binding IsAlive}"
                          Name="gbChat"
                          Style="{StaticResource ChatButtonStyle}">
                <ToggleButton.Content>
                    <StackPanel Orientation="Horizontal"
                                VerticalAlignment="Center">
                        <Image Source="Resources/Alert.ico"
                               Visibility="{Binding IsNewMessageReceived, Converter={StaticResource BooleanToVisibilityConverter}}"
                               Height="16"/>
                        <Image Source="Resources/Chat.ico"
                               Margin="5,0,0,0"
                               Height="16"/>
                        <TextBlock Text="Enter Chat"
                                   FontSize="12"
                                   Margin="5,0,0,0"
                                   Foreground="{StaticResource ChatButtonBorderColor}"/>
                    </StackPanel>
                </ToggleButton.Content>
            </ToggleButton>

        </Grid>

        <Grid Grid.Row="5"
              Grid.ColumnSpan="2"
              Background="{StaticResource PanelBackgroundColor}">

            <StackPanel VerticalAlignment="Bottom"
                        HorizontalAlignment="Left"
                        Orientation="Horizontal" Margin="5,0,0,0">

                <!--<Slider Name="sldVolume"
                        Width="100"
                        Minimum="0"
                        Value="50"
                        Maximum="100"
                        ValueChanged="sldVolume_ValueChanged"/>-->

                <Image Source="Resources/Headphone.ico"
                       Height="16"/>
                
                <RadioButton Content="Listener"
                              Template="{StaticResource ToggleButtonLeft}"
                              Foreground="White"
                              Margin="10,0,0,0"
                              Padding="5,0,5,0"
                              Height="25"
                              IsEnabled="{Binding IsAlive,Converter={StaticResource BooleanToOppositeBooleanConverter}}"
                              IsChecked="{Binding IsListener, Mode=TwoWay}"
                              VerticalAlignment="Center"/>

                <RadioButton Content="Transmitter"
                              Padding="5,0,5,0"
                              Height="25"
                              Template="{StaticResource ToggleRightLeft}"
                              IsEnabled="{Binding IsAlive,Converter={StaticResource BooleanToOppositeBooleanConverter}}"
                              IsChecked="{Binding IsTransmitter, Mode=TwoWay}"
                              Foreground="White"
                              VerticalAlignment="Center"/>

                <Image Source="Resources/Antenna.ico"
                       Margin="10,0,0,0"
                       Height="16"/>


                <StackPanel VerticalAlignment="Center"
                            Margin="100,0,0,0">
                    <TextBlock Text="Total: "
                               Foreground="White"/>
                    <TextBlock Text="{Binding TotalLong}"
                               FontWeight="Bold"/>
                </StackPanel>

                <!--<Menu Background="Transparent"
                      BorderThickness="0"
                      Margin="10,0,0,0"
                      VerticalAlignment="Center">
                    <MenuItem BorderThickness="0">
                        <MenuItem.Header>
                            <Image Source="{Binding IsAvailableStatus, Converter={StaticResource BoolToImageConverter}, ConverterParameter=ClientStatus}"/>
                        </MenuItem.Header>

                        <MenuItem Background="{StaticResource PanelBackgroundColor}"
                                  Header="Available"
                                  BorderThickness="0">
                            <MenuItem.Icon>
                                <Image Source="Resources/Available.ico" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Background="{StaticResource PanelBackgroundColor}"
                                  Header="Away"
                                  BorderThickness="0">
                            <MenuItem.Icon>
                                    <Image Source="Resources/Away.ico" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                </Menu>-->


            </StackPanel>

        </Grid>

    </Grid>
</Window>
